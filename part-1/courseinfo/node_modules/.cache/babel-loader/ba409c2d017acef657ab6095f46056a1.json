{"ast":null,"code":"var _jsxFileName = \"/Users/kendallbendheim/Documents/full-stack-open-submissions/part-1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = ({\n  onClick,\n  text\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Button;\n\nconst StatisticLine = ({\n  text,\n  value\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [text, \": \", value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this);\n};\n\n_c2 = StatisticLine;\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  clicks\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"good\",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"neutral\",\n      value: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"bad\",\n      value: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"all review:\",\n      value: clicks.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n};\n\n_c3 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [clicks, setClicks] = useState([]);\n\n  const incrementGood = () => {\n    setGood(good + 1);\n    setClicks(clicks + 1);\n  };\n\n  const incrementNeutral = () => {\n    setNeutral(neutral + 1);\n    setClicks(clicks + 1);\n  };\n\n  const incrementBad = () => {\n    setBad(bad + 1);\n    setClicks(clicks + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: incrementGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: incrementNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: incrementBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      bad: bad,\n      neutral: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"+0PSHDVkKBQ/e4VN3TiCfJw/QlQ=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StatisticLine\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/kendallbendheim/Documents/full-stack-open-submissions/part-1/src/App.js"],"names":["React","useState","Button","onClick","text","StatisticLine","value","Statistics","good","neutral","bad","clicks","length","App","setGood","setNeutral","setBad","setClicks","incrementGood","incrementNeutral","incrementBad"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\n\nconst Button = ({onClick, text}) => {\n    return (\n      <button onClick={onClick}>\n        {text}\n      </button>\n    )\n  }\n\n  const StatisticLine = ({text, value}) => {\n    return (\n      <div>\n        {text}: {value}\n      </div>\n    )\n  }\n\n\n  const Statistics = ({good, neutral, bad, clicks}) => {\n    return(\n      <div>\n        <h1>Statistics</h1>\n        <StatisticLine text=\"good\" value={good} />\n        <StatisticLine text=\"neutral\" value={neutral} />\n        <StatisticLine text=\"bad\" value ={bad} />\n        <StatisticLine text=\"all review:\" value={clicks.length} />\n      </div>\n    )\n  }\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [clicks, setClicks] = useState([])\n\n  const incrementGood = () => {\n    setGood(good+1)\n    setClicks(clicks+1)\n  }\n\n  const incrementNeutral= () => {\n    setNeutral(neutral+1)\n    setClicks(clicks+1)\n  }\n\n  const incrementBad= () => {\n    setBad(bad+1)\n    setClicks(clicks+1)\n  }\n\n  return (\n    <div>\n    <h1>give feedback</h1>\n      <Button onClick={incrementGood} text='good'/>\n      <Button onClick={incrementNeutral} text='neutral'/>\n      <Button onClick={incrementBad} text='bad'/>\n    <Statistics good={good} bad={bad} neutral={neutral} />\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}