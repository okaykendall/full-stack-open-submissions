{"ast":null,"code":"var _jsxFileName = \"/Users/kendallbendheim/Documents/full-stack-open-submissions/part-1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = ({\n  onClick,\n  text\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Button;\n\nconst StatisticLine = ({\n  text,\n  value\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: [text, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = StatisticLine;\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  clicks\n}) => {\n  const clickos = clicks.length;\n\n  if (clickos > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n            text: \"good\",\n            value: good\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n            text: \"neutral\",\n            value: neutral\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n            text: \"bad\",\n            value: bad\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n            text: \"all reviews\",\n            value: clickos\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n            text: 'Average',\n            value: (good + bad) / clickos\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n            text: 'Positive',\n            value: good * 100 / clickos\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"no feedback yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_c3 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [clicks, setClicks] = useState([]);\n\n  const incrementGood = () => {\n    setGood(good + 1);\n    setClicks(clicks + 1);\n  };\n\n  const incrementNeutral = () => {\n    setNeutral(neutral + 1);\n    setClicks(clicks + 1);\n  };\n\n  const incrementBad = () => {\n    setBad(bad + 1);\n    setClicks(clicks + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: incrementGood,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: incrementNeutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: incrementBad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      bad: bad,\n      neutral: neutral,\n      clicks: clicks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"+0PSHDVkKBQ/e4VN3TiCfJw/QlQ=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StatisticLine\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/kendallbendheim/Documents/full-stack-open-submissions/part-1/src/App.js"],"names":["React","useState","Button","onClick","text","StatisticLine","value","Statistics","good","neutral","bad","clicks","clickos","length","App","setGood","setNeutral","setBad","setClicks","incrementGood","incrementNeutral","incrementBad"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\n\nconst Button = ({onClick, text}) => {\n    return (\n      <button onClick={onClick}>\n        {text}\n      </button>\n    )\n  }\n\n  const StatisticLine = ({text, value}) => {\n    return (\n        <tr>\n            <td>\n            {text}: \n            </td>\n            <td>\n            {value}\n            </td>\n        </tr>\n\n    )\n  }\n\n\n  const Statistics = ({good, neutral, bad, clicks}) => {\n      const clickos = clicks.length\n      if (clickos > 0 ) {\n    return(\n      <div>\n        <h1>Statistics</h1>\n        <table>\n            <tbody>\n            <StatisticLine text=\"good\" value={good} />\n            <StatisticLine text=\"neutral\" value={neutral} />\n            <StatisticLine text=\"bad\" value ={bad} />\n            <StatisticLine text=\"all reviews\" value={clickos} />\n            <StatisticLine text={'Average'} value={(good + bad) / clickos} />\n            <StatisticLine text={'Positive'} value={good * 100 / clickos} />\n            </tbody>\n        </table>\n      </div>\n    ) } else {\n        return (\n            <div>\n                <h1>no feedback yet</h1>\n            </div>\n        )\n    }\n  }\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [clicks, setClicks] = useState([])\n\n  const incrementGood = () => {\n    setGood(good+1)\n    setClicks(clicks+1)\n  }\n\n  const incrementNeutral= () => {\n    setNeutral(neutral+1)\n    setClicks(clicks+1)\n  }\n\n  const incrementBad= () => {\n    setBad(bad+1)\n    setClicks(clicks+1)\n  }\n\n  return (\n    <div>\n    <h1>give feedback</h1>\n      <Button onClick={incrementGood} text='good'/>\n      <Button onClick={incrementNeutral} text='neutral'/>\n      <Button onClick={incrementBad} text='bad'/>\n        <Statistics good={good} bad={bad} neutral={neutral} clicks={clicks} />\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}